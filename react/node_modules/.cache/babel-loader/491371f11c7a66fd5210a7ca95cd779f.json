{"ast":null,"code":"var _jsxFileName = \"/Users/cefgoose/Documents/WEBGEM/react/src/components/FileButtons/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { DataContext } from \"../../common/DataContext\";\nimport { Upload, EditorMenu, UploadFile, UploadForm } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Button = styled.button`\n\n  box-sizing: inherit;\n  font-family: sans-serif;\n  font-size: 100%;\n  line-height: 1.15;\n  min-width: 5vw;\n  height: min-content;\n  width:15vh;\n\n\n  border-radius: 6px;\n  margin:auto;\n  margin-top: .5em;\n  margin-bottom: 1em;\n  margin-left:.5%;\n  margin-right:.5%;\n  background-color: #f4753c;\n  color: white;\n\n\n  border: none;\n  cursor: ${props => props.disabled ? \"not-allowed\" : \"pointer\"};\n  &:hover {\n    background-color: ${props => props.disabled ? \"gray\" : \"#c85823\"};\n    color: black;\n    background-color:  #ffff;\n    border: 2px solid #f4753c;\n  }\n`;\n_c = Button;\nexport const FileButtons = props => {\n  _s();\n\n  const {\n    setTableData\n  } = useContext(DataContext);\n  const {\n    fileID\n  } = useContext(DataContext);\n\n  const onChange = e => {\n    let files = e.target.files;\n    let infile = files[0];\n    let formData = new FormData();\n    formData.append(\"infile\", infile);\n\n    const request = async () => {\n      const response = await fetch('/api/parse?ID=' + fileID, {\n        method: \"POST\",\n        body: formData\n      });\n\n      if (response.ok) {\n        const obj = await response.json();\n        let UnUpData = obj[obj.length - 1];\n        obj.splice(-1, 1);\n        props.action(UnUpData, \"UnUpData\"); // path = \n\n        setTableData(obj);\n      }\n    };\n\n    request();\n  };\n\n  const fileInput = React.useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"file\",\n      name: \"file\",\n      onClick: () => fileInput.current.click(),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileInput,\n      onChange: e => onChange(e),\n      type: \"file\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => props.action(null, \"Download\"),\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FileButtons, \"fOv2FuTFIACV9E1viaas4OgA+pQ=\");\n\n_c2 = FileButtons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"FileButtons\");","map":{"version":3,"sources":["/Users/cefgoose/Documents/WEBGEM/react/src/components/FileButtons/index.js"],"names":["React","Component","useState","useContext","styled","DataContext","Upload","EditorMenu","UploadFile","UploadForm","Button","button","props","disabled","FileButtons","setTableData","fileID","onChange","e","files","target","infile","formData","FormData","append","request","response","fetch","method","body","ok","obj","json","UnUpData","length","splice","action","fileInput","useRef","current","click","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,UAAzC,QAA6D,UAA7D;;;AAEA,OAAO,MAAMC,MAAM,GAAGN,MAAM,CAACO,MAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAaC,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,aAAjB,GAAiC,SAAW;AACpE;AACA,wBAAyBD,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,SAAW;AACzE;AACA;AACA;AACA;AACA,CA7BO;KAAMH,M;AA+Bb,OAAO,MAAMI,WAAW,GAAIF,KAAD,IAAW;AAAA;;AACpC,QAAM;AAAEG,IAAAA;AAAF,MAAmBZ,UAAU,CAACE,WAAD,CAAnC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAcb,UAAU,CAACE,WAAD,CAA9B;;AAEE,QAAMY,QAAQ,GAAIC,CAAD,IAAO;AACpB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,QAAIE,MAAM,GAAGF,KAAK,CAAC,CAAD,CAAlB;AACA,QAAIG,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BH,MAA1B;;AACA,UAAMI,OAAO,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAC,mBAAiBX,MAAlB,EAA0B;AAACY,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,IAAI,EAAEP;AAAtB,OAA1B,CAA7B;;AACA,UAAGI,QAAQ,CAACI,EAAZ,EAAe;AACb,cAAMC,GAAG,GAAE,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACA,YAAIC,QAAQ,GAAGF,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAW,CAAZ,CAAlB;AACAH,QAAAA,GAAG,CAACI,MAAJ,CAAW,CAAC,CAAZ,EAAc,CAAd;AACAvB,QAAAA,KAAK,CAACwB,MAAN,CAAaH,QAAb,EAAsB,UAAtB,EAJa,CAKb;;AACAlB,QAAAA,YAAY,CAACgB,GAAD,CAAZ;AACD;AAAC,KATF;;AAUAN,IAAAA,OAAO;AAEN,GAjBL;;AAmBJ,QAAMY,SAAS,GAAGrC,KAAK,CAACsC,MAAN,EAAlB;AAEA,sBACG;AAAA,4BAGC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAA+B,MAAA,OAAO,EAAE,MAAID,SAAS,CAACE,OAAV,CAAkBC,KAAlB,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIO;AACA,MAAA,GAAG,EAAEH,SADL;AAEA,MAAA,QAAQ,EAAGnB,CAAD,IAAKD,QAAQ,CAACC,CAAD,CAFvB;AAGA,MAAA,IAAI,EAAC,MAHL;AAIA,MAAA,KAAK,EAAE;AAAEuB,QAAAA,OAAO,EAAE;AAAX;AAJP;AAAA;AAAA;AAAA;AAAA,YAJP,eASC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAI7B,KAAK,CAACwB,MAAN,CAAa,IAAb,EAAkB,UAAlB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATD;AAAA,kBADH;AAeC,CAxCM;;GAAMtB,W;;MAAAA,W","sourcesContent":["import React, { Component,useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { DataContext } from \"../../common/DataContext\";\nimport { Upload, EditorMenu, UploadFile, UploadForm,  } from \"./styles\";\n\nexport const Button = styled.button`\n\n  box-sizing: inherit;\n  font-family: sans-serif;\n  font-size: 100%;\n  line-height: 1.15;\n  min-width: 5vw;\n  height: min-content;\n  width:15vh;\n\n\n  border-radius: 6px;\n  margin:auto;\n  margin-top: .5em;\n  margin-bottom: 1em;\n  margin-left:.5%;\n  margin-right:.5%;\n  background-color: #f4753c;\n  color: white;\n\n\n  border: none;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  &:hover {\n    background-color: ${(props) => (props.disabled ? \"gray\" : \"#c85823\")};\n    color: black;\n    background-color:  #ffff;\n    border: 2px solid #f4753c;\n  }\n`;\n\nexport const FileButtons = (props) => {\n  const { setTableData } = useContext(DataContext);\n  const { fileID, } = useContext(DataContext);\n\n    const onChange = (e) => {\n        let files = e.target.files\n        let infile = files[0]\n        let formData = new FormData();\n        formData.append(\"infile\", infile);\n        const request = async () => {\n        const response =  await fetch('/api/parse?ID='+fileID, {method:\"POST\", body: formData})\n        if(response.ok){\n          const obj= await response.json()\n          let UnUpData = obj[obj.length-1]\n          obj.splice(-1,1)\n          props.action(UnUpData,\"UnUpData\")\n          // path = \n          setTableData(obj);\n        }}\n        request();\n\n        };  \n        \nconst fileInput = React.useRef();   \n\nreturn(\n   <>\n\n\n    <Button type='file' name='file'onClick={()=>fileInput.current.click()}>Upload</Button>\n          <input \n          ref={fileInput} \n          onChange={(e)=>onChange(e)}\n          type=\"file\" \n          style={{ display: 'none' }} />\n    <Button onClick={()=>props.action(null,\"Download\")}>Download</Button>\n\n    </>\n    \n    );\n};"]},"metadata":{},"sourceType":"module"}