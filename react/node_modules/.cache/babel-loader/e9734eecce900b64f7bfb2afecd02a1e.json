{"ast":null,"code":"var _jsxFileName = \"/Users/cefgoose/Documents/WEBGEM/react/src/components/Grid/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useContext, useEffect } from \"react\";\nimport { Box, Card, Button, Divider, Typography } from \"@material-ui/core\";\nimport ReactGridLayout, { WidthProvider } from \"react-grid-layout\";\nimport \"./styles.css\";\nimport { FileButtons } from \"components/FileButtons\";\nimport { EditorButtons } from \"components/TableButtons/EditorButtons\";\nimport { ExportButton } from \"../FileButtons/ExportButton.js\";\nimport { DownloadButton } from \"../FileButtons/DownloadButton.js\";\nimport { EditorTable } from \"components/Table\";\nimport { EditButton } from \"../Edit/EditButton.js\";\nimport { TeamNameField } from \"../TeamName/TeamNameField.js\";\nimport { EditorNameField } from \"../NameFields/EditorNameField.js\";\nimport { UserNameField } from \"../NameFields/UserNameField.js\";\nimport { LineWidthSpin } from \"../Spinners/LineWidthSpin.js\";\nimport { UnUpLineWidthSpin } from \"../Spinners/UnUpLineWidthSpin.js\";\nimport { NodeSizeSpin } from \"../Spinners/NodeSizeSpin.js\";\nimport { UnUpNodeSizeSpin } from \"../Spinners/UnUpNodeSizeSpin.js\";\nimport { LineColorPicker } from \"../ColorPickers/LineColorPicker.js\";\nimport { UnUpLineColorPicker } from \"../ColorPickers/UnUpLineColorPicker.js\";\nimport { NodeColorPicker } from \"../ColorPickers/NodeColorPicker.js\";\nimport { UnUpNodeColorPicker } from \"../ColorPickers/UnUpNodeColorPicker.js\";\nimport { NodeShapeMenu } from \"../ShapeMenu/NodeShapeMenu.js\";\nimport { UnUpNodeShapeMenu } from \"../ShapeMenu/UnUpNodeShapeMenu.js\";\nimport { RemoveButtons } from \"../TableButtons/RemoveButtons.js\";\nimport { MoveButtons } from \"../TableButtons/MoveButtons.js\";\nimport { DataContext } from \"../../common/DataContext\";\nimport { saveAs } from 'file-saver';\nimport { GEM, MobileLineandNodeWrapper, MobileFileButtonsWrapper, EverythingbutTable, MobileTeamTableWrapper, MobileTeamTableBtns, MobileViewWrapper, AddUpdateEditor, FileButtonsWrapper, UpExDown, UnUpLineandNodeWrapper, LineandNodeWrapper, TeamTable, UnUploadedEditor, TeamTableBtns, AddUpdateBtns } from \"./styles.js\";\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar inEditName, inUserName, inLineWidth, inNodeSize, inLineWidth, inNodeSize, inLineColor, inNodeColor, inNodeShape;\nconst GridLayout = WidthProvider(ReactGridLayout);\n_c = GridLayout;\nexport const Grid = () => {\n  _s();\n\n  const {\n    tableData,\n    setTableData,\n    fileID,\n    generateGemJsonId,\n    selectedRow,\n    setSelectedRow,\n    EditorRow,\n    setEditorRow\n  } = useContext(DataContext);\n  const [lastOutJson, setLastOutJson] = useState({});\n  const [state, setState] = useState({\n    tableData: tableData,\n    TeamName: \"\",\n    EditorName: \"\",\n    UserName: \"\",\n    LineColor: '#A9A9A9',\n    LineWidth: 5,\n    NodeColor: \"#D3D3D3\",\n    NodeSize: 5,\n    NodeShape: '/icons/circle.png',\n    UnUpLineColor: 'green',\n    UnUpNodeColor: 'orange',\n    UnUpLineWidth: 5,\n    UnUpNodeSize: 5,\n    UnUpNodeShape: '/icons/square.png',\n    FileIndex: fileID,\n    RowData: {},\n    ShowShapeMenu: false,\n    ShowUnUpShapeMenu: false,\n    ShowLineColorMenu: false,\n    ShowUnUpLineColorMenu: false,\n    ShowNodeColorMenu: false,\n    ShowUnUpNodeColorMenu: false,\n    addEditor: true,\n    newFile: true\n  });\n  useEffect(fileID => {\n    if (fileID == null) {\n      generateGemJsonId();\n    }\n  }, []);\n\n  const GetUnUpload = () => {\n    if (state.TeamName === \"\" && tableData[0].NAME != null) {\n      alert(\"Please enter a valid team name before exporting\");\n      return;\n    }\n\n    if (tableData[0].NAME === null) {\n      alert(\"No Data to export. You must either import an existing .mapscc file to edit, or populate the table with editor data in order to export.\");\n      return;\n    }\n\n    let path = '/api/uploads/' + state.TeamName + \".mapcss\";\n\n    const Downrequest = async () => {\n      return fetch(path, {\n        method: \"GET\",\n        responseType: 'blob'\n      }).then(response => response.blob()).then(blob => saveAs(blob, state.TeamName + \".mapcss\"));\n    };\n\n    let outJson = [{\n      \"TeamName\": state.TeamName,\n      \"LineColor\": state.UnUpLineColor,\n      \"lineWidth\": state.UnUpLineWidth,\n      \"NodeSize\": state.UnUpNodeSize,\n      \"NodeColor\": state.UnUpNodeColor,\n      \"NodeShape\": state.UnUpNodeShape\n    }];\n    outJson = JSON.stringify(outJson);\n    let url = '/api/compile?fileID=' + fileID;\n\n    const goEx = async () => {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: outJson,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const obj = await response.text();\n        return fetch(path, {\n          method: \"GET\",\n          responseType: 'blob'\n        }).then(response => response.blob()).then(blob => saveAs(blob, state.TeamName + \".mapcss\"));\n      }\n    };\n\n    goEx();\n  };\n\n  const changeFeature = (e, f) => {\n    let outJson = state.RowData;\n\n    switch (f) {\n      case \"LineColor\":\n        setState({ ...state,\n          LineColor: e\n        });\n        break;\n\n      case \"NodeColor\":\n        setState({ ...state,\n          NodeColor: e\n        });\n        break;\n\n      case \"UnUpLineColor\":\n        setState({ ...state,\n          UnUpLineColor: e\n        });\n        break;\n\n      case \"UnUpNodeColor\":\n        setState({ ...state,\n          UnUpNodeColor: e\n        });\n        break;\n\n      case \"NodeShape\":\n        setState({ ...state,\n          NodeShape: e,\n          ShowShapeMenu: false\n        });\n        break;\n\n      case \"UnUpNodeShape\":\n        setState({ ...state,\n          UnUpNodeShape: e,\n          ShowUnUpShapeMenu: false\n        });\n        break;\n\n      case \"+LineWidth\":\n        if (state.LineWidth !== 10) {\n          setState({ ...state,\n            LineWidth: state.LineWidth + 1\n          });\n        }\n\n        break;\n\n      case \"-LineWidth\":\n        if (state.LineWidth !== 0) {\n          setState({ ...state,\n            LineWidth: state.LineWidth - 1\n          });\n        }\n\n        break;\n\n      case \"+UnUpLineWidth\":\n        if (state.UnUpLineWidth !== 10) {\n          setState({ ...state,\n            UnUpLineWidth: state.UnUpLineWidth + 1\n          });\n        }\n\n        break;\n\n      case \"-UnUpLineWidth\":\n        if (state.UnUpLineWidth !== 0) {\n          setState({ ...state,\n            UnUpLineWidth: state.UnUpLineWidth - 1\n          });\n        }\n\n        break;\n\n      case \"+NodeSize\":\n        if (state.NodeSize !== 10) {\n          setState({ ...state,\n            NodeSize: state.NodeSize + 1\n          });\n        }\n\n        break;\n\n      case \"-NodeSize\":\n        if (state.NodeSize !== 0) {\n          setState({ ...state,\n            NodeSize: state.NodeSize - 1\n          });\n        }\n\n        break;\n\n      case \"+UnUpNodeSize\":\n        if (state.UnUpNodeSize !== 10) {\n          setState({ ...state,\n            UnUpNodeSize: state.UnUpNodeSize + 1\n          });\n        }\n\n        break;\n\n      case \"-UnUpNodeSize\":\n        if (state.UnUpNodeSize !== 0) {\n          setState({ ...state,\n            UnUpNodeSize: state.UnUpNodeSize - 1\n          });\n        }\n\n        break;\n\n      case \"TeamName\":\n        if (state.UnUpNodeSize !== 0) {\n          setState({ ...state,\n            TeamName: e\n          });\n        }\n\n        break;\n\n      case \"EditorName\":\n        setState({ ...state,\n          EditorName: e\n        });\n        break;\n\n      case \"UserName\":\n        setState({ ...state,\n          UserName: e\n        });\n        break;\n\n      case \"ShowShapeMenu\":\n        setState({ ...state,\n          ShowShapeMenu: e\n        });\n        break;\n\n      case \"ShowUnUpShapeMenu\":\n        setState({ ...state,\n          ShowUnUpShapeMenu: e\n        });\n        break;\n\n      case \"ShowLineColorMenu\":\n        setState({ ...state,\n          ShowLineColorMenu: e\n        });\n        break;\n\n      case \"ShowUnUpLineColorMenu\":\n        setState({ ...state,\n          ShowUnUpLineColorMenu: e\n        });\n        break;\n\n      case \"ShowNodeColorMenu\":\n        setState({ ...state,\n          ShowNodeColorMenu: e\n        });\n        break;\n\n      case \"ShowUnUpNodeColorMenu\":\n        setState({ ...state,\n          ShowUnUpNodeColorMenu: e\n        });\n        break;\n\n      case \"GetRowData\":\n        setState({ ...state,\n          RowData: e\n        });\n        break;\n\n      case \"Download\":\n        break;\n\n      case \"UnUpData\":\n        setState({ ...state,\n          newFile: false,\n          TeamName: e[0][\"TEAMNAME\"],\n          UnUpNodeColor: e[0][\"UNUPNODECOLOR\"],\n          UnUpNodeSize: e[0][\"UNUPNODESIZE\"],\n          UnUpNodeShape: \"/icons/\" + e[0][\"UNUPNODESHAPE\"] + \".png\",\n          UnUpLineColor: e[0][\"UNUPLINECOLOR\"],\n          UnUpLineWidth: e[0][\"UNUPLINEWIDTH\"]\n        });\n        break;\n\n      case \"RemoveEditor\":\n        outJson = JSON.stringify(outJson);\n\n        const request = async () => {\n          const response = await fetch('/api/table?sub=remove&fileID=' + fileID, {\n            method: \"POST\",\n            body: outJson,\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n\n          if (response.ok) {\n            let object = await response.json();\n            object = JSON.stringify(object);\n            object = JSON.parse(object);\n            setTableData(object);\n          }\n        };\n\n        request();\n        break;\n\n      case \"RemoveAll\":\n        const removeRequest = async () => {\n          const response = await fetch('/api/removeAll?fileID=' + fileID, {\n            method: \"GET\"\n          });\n\n          if (response.ok) {\n            let object = await response.json();\n            object = JSON.stringify(object);\n            object = JSON.parse(object);\n            setTableData(object);\n          }\n        };\n\n        removeRequest();\n        setState({ ...state,\n          newFile: true,\n          TeamName: \"\"\n        });\n        break;\n\n      case \"MoveUp\":\n        console.log(outJson);\n\n        if (outJson === lastOutJson) {\n          outJson.rowId = outJson.rowId - 1;\n        }\n\n        const moveUpRequest = async () => {\n          const response = await fetch('/api/table?sub=moveUp&fileID=' + fileID, {\n            method: \"POST\",\n            body: JSON.stringify(outJson),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n\n          if (response.ok) {\n            let object = await response.json();\n            object = JSON.stringify(object);\n            object = JSON.parse(object);\n            setTableData(object);\n          }\n        };\n\n        moveUpRequest();\n\n        if (selectedRow !== 0) {\n          setSelectedRow(selectedRow - 1);\n          setEditorRow(selectedRow - 1);\n        }\n\n        setLastOutJson(outJson);\n        break;\n\n      case \"MoveDown\":\n        if (outJson === lastOutJson) {\n          outJson.rowId = outJson.rowId + 1;\n        }\n\n        const moveDownRequest = async () => {\n          const response = await fetch('/api/table?sub=moveDown&fileID=' + fileID, {\n            method: \"POST\",\n            body: JSON.stringify(outJson),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n\n          if (response.ok) {\n            let object = await response.json();\n            object = JSON.stringify(object);\n            object = JSON.parse(object);\n            setSelectedRow(selectedRow + 1);\n            setEditorRow(selectedRow + 1);\n            setTableData(object);\n          }\n        };\n\n        moveDownRequest();\n        setSelectedRow(selectedRow + 1);\n        setEditorRow(selectedRow + 1);\n        setLastOutJson(outJson);\n        break;\n\n      case \"Clear\":\n        console.log(\"clear\");\n        setState({ ...state,\n          EditorName: \"\",\n          UserName: \"\",\n          LineColor: '#A9A9A9',\n          LineWidth: 5,\n          NodeColor: \"#D3D3D3\",\n          NodeSize: 5,\n          NodeShape: '/icons/circle.png'\n        });\n        break;\n\n      default:\n    }\n  };\n\n  function isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n\n    return true;\n  }\n\n  const ChangeAddButton = () => {\n    let outJson = state.RowData;\n    var checkJson;\n\n    if (Object.entries(outJson).length !== 0) {\n      checkJson = outJson;\n    }\n\n    if (!checkJson) {\n      alert(\"Invalid Selection\");\n    } else {\n      setState({ ...state,\n        addEditor: false\n      }); //\n    }\n  };\n\n  useEffect(() => {\n    if (state.addEditor !== true) {\n      EditEditor(); // console.log(state)\n    } // else if(!state.EditorName){\n    // EditEditor();\n    // }\n\n  }, [state.addEditor]);\n\n  const EditEditor = () => {\n    let outJson = state.RowData;\n    console.log(state.RowData);\n    let checkJson = outJson;\n    inEditName = checkJson['editor']['NAME'];\n    inUserName = checkJson['editor']['UID'];\n    console.log(inUserName);\n    inLineWidth = checkJson['editor']['LINEWIDTH'];\n    inNodeSize = checkJson['editor']['NODESIZE'];\n    inLineColor = checkJson['editor']['LINECOLOR'];\n    inNodeColor = checkJson['editor']['NODECOLOR'];\n    inNodeShape = checkJson['editor']['NODESHAPE'];\n    setState({ ...state,\n      EditorName: inEditName,\n      UserName: inUserName,\n      LineWidth: parseInt(inLineWidth),\n      NodeSize: parseInt(inNodeSize),\n      LineColor: inLineColor,\n      NodeShape: inNodeShape,\n      NodeColor: inNodeColor\n    });\n  };\n\n  const updateEditor = e => {\n    let sub = e;\n\n    if (state.EditorName === \"\" && e === \"add\") {\n      alert(\"Please enter a valid Name for the Editor\");\n      return;\n    }\n\n    if (state.UserName === \"\" && e === \"add\") {\n      alert(\"Please enter a valid OSM Username\");\n      return;\n    } else if (state.EditorName === \"Mappy McMappington III\" && e === \"update\") {\n      alert(\"You must first select an Editor from the table to update. \");\n      return;\n    }\n\n    let outJson = state.RowData;\n    var checkJson;\n\n    if (Object.entries(outJson).length !== 0) {\n      checkJson = JSON.parse(outJson);\n    }\n\n    var index;\n\n    if (checkJson) {\n      index = checkJson[\"rowId\"];\n    }\n\n    let entry = {\n      'NAME': state.EditorName,\n      \"UID\": state.UserName,\n      'NODESHAPE': state.NodeShape,\n      'NODECOLOR': state.NodeColor,\n      \"NODESIZE\": state.NodeSize,\n      'LINEWIDTH': state.LineWidth,\n      \"LINECOLOR\": state.LineColor\n    };\n    entry = JSON.stringify(entry);\n    let url = '/api/update?sub=' + sub + '&index=' + index + '&infile=' + fileID + \"&newFile=\" + state.newFile;\n\n    const update = async () => {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: entry,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const obj = await response.json();\n        setTableData(obj);\n      }\n    };\n\n    update();\n    setState({ ...state,\n      EditorName: \"\",\n      UserName: \"\",\n      LineColor: '#A9A9A9',\n      LineWidth: 5,\n      NodeColor: \"#D3D3D3\",\n      NodeSize: 5,\n      NodeShape: '/icons/circle.png',\n      addEditor: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Gem-div\",\n    children: [/*#__PURE__*/_jsxDEV(GEM, {\n      children: [/*#__PURE__*/_jsxDEV(TeamTable, {\n        children: tableData ? /*#__PURE__*/_jsxDEV(EditorTable, {\n          useData: tableData,\n          action: changeFeature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 31\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"IMMenuLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"importLabelDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"import-label\",\n            children: \"Import/Export:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"team-name-label\",\n          children: \"Team Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TeamNameField, {\n          action: changeFeature,\n          value: state.TeamName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-functions\",\n          children: \"File Import/Export:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FileButtons, {\n          fileID: state.fileID,\n          action: changeFeature,\n          action2: GetUnUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-functions\",\n          children: \"Delete Editors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(RemoveButtons, {\n          action: changeFeature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-functions\",\n          children: \"Move Editors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MoveButtons, {\n          action: changeFeature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-functions\",\n          children: \"Update Editors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EditorButtons, {\n          action: changeFeature,\n          action2: updateEditor,\n          action3: ChangeAddButton,\n          bool: state.addEditor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EverythingbutTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MenuLabel\",\n        children: [/*#__PURE__*/_jsxDEV(UnUpNodeShapeMenu, {\n          action: changeFeature,\n          color: state.UnUpNodeColor,\n          src: state.UnUpNodeShape,\n          ShowMenu: state.ShowUnUpShapeMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(UnUpNodeSizeSpin, {\n          num: state.UnUpNodeSize,\n          action: changeFeature,\n          action2: changeFeature,\n          color: state.UnUpNodeColor,\n          showMenu: state.ShowUnUpNodeColorMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(UnUpLineWidthSpin, {\n          num: state.UnUpLineWidth,\n          action: changeFeature,\n          action2: changeFeature,\n          color: state.UnUpLineColor,\n          showMenu: state.ShowUnUpLineColorMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MenuLabel\",\n        children: [/*#__PURE__*/_jsxDEV(NodeShapeMenu, {\n          action: changeFeature,\n          color: state.NodeColor,\n          src: state.NodeShape,\n          ShowMenu: state.ShowShapeMenu,\n          editorName: state.EditorName,\n          editorUsername: state.UserName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NodeSizeSpin, {\n          action: changeFeature,\n          num: state.NodeSize,\n          color: state.NodeColor,\n          showMenu: state.ShowNodeColorMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LineWidthSpin, {\n          action: changeFeature,\n          num: state.LineWidth,\n          color: state.LineColor,\n          showMenu: state.ShowLineColorMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"7bhe+qrPkTTiAGLXys5x03E/dAE=\");\n\n_c2 = Grid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GridLayout\");\n$RefreshReg$(_c2, \"Grid\");","map":{"version":3,"sources":["/Users/cefgoose/Documents/WEBGEM/react/src/components/Grid/index.js"],"names":["React","Component","useState","useContext","useEffect","Box","Card","Button","Divider","Typography","ReactGridLayout","WidthProvider","FileButtons","EditorButtons","ExportButton","DownloadButton","EditorTable","EditButton","TeamNameField","EditorNameField","UserNameField","LineWidthSpin","UnUpLineWidthSpin","NodeSizeSpin","UnUpNodeSizeSpin","LineColorPicker","UnUpLineColorPicker","NodeColorPicker","UnUpNodeColorPicker","NodeShapeMenu","UnUpNodeShapeMenu","RemoveButtons","MoveButtons","DataContext","saveAs","GEM","MobileLineandNodeWrapper","MobileFileButtonsWrapper","EverythingbutTable","MobileTeamTableWrapper","MobileTeamTableBtns","MobileViewWrapper","AddUpdateEditor","FileButtonsWrapper","UpExDown","UnUpLineandNodeWrapper","LineandNodeWrapper","TeamTable","UnUploadedEditor","TeamTableBtns","AddUpdateBtns","BrowserView","MobileView","isBrowser","isMobile","inEditName","inUserName","inLineWidth","inNodeSize","inLineColor","inNodeColor","inNodeShape","GridLayout","Grid","tableData","setTableData","fileID","generateGemJsonId","selectedRow","setSelectedRow","EditorRow","setEditorRow","lastOutJson","setLastOutJson","state","setState","TeamName","EditorName","UserName","LineColor","LineWidth","NodeColor","NodeSize","NodeShape","UnUpLineColor","UnUpNodeColor","UnUpLineWidth","UnUpNodeSize","UnUpNodeShape","FileIndex","RowData","ShowShapeMenu","ShowUnUpShapeMenu","ShowLineColorMenu","ShowUnUpLineColorMenu","ShowNodeColorMenu","ShowUnUpNodeColorMenu","addEditor","newFile","GetUnUpload","NAME","alert","path","Downrequest","fetch","method","responseType","then","response","blob","outJson","JSON","stringify","url","goEx","body","headers","ok","obj","text","changeFeature","e","f","request","object","json","parse","removeRequest","console","log","rowId","moveUpRequest","moveDownRequest","isEmpty","key","hasOwnProperty","ChangeAddButton","checkJson","Object","entries","length","EditEditor","parseInt","updateEditor","sub","index","entry","update"],"mappings":"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","sourcesContent":["import React, { Component, useState, useContext, useEffect } from \"react\";\nimport {\n  Box,\n  Card,\n\n  Button,\n  Divider,\n  Typography,\n} from \"@material-ui/core\";\nimport ReactGridLayout, { WidthProvider } from \"react-grid-layout\";\nimport \"./styles.css\";\nimport { FileButtons } from \"components/FileButtons\";\nimport { EditorButtons } from \"components/TableButtons/EditorButtons\";\nimport { ExportButton } from \"../FileButtons/ExportButton.js\";\nimport { DownloadButton } from \"../FileButtons/DownloadButton.js\";\nimport { EditorTable } from \"components/Table\"\nimport { EditButton } from \"../Edit/EditButton.js\"\nimport { TeamNameField } from \"../TeamName/TeamNameField.js\"\nimport { EditorNameField } from \"../NameFields/EditorNameField.js\"\nimport { UserNameField } from \"../NameFields/UserNameField.js\"\nimport { LineWidthSpin} from \"../Spinners/LineWidthSpin.js\"\nimport { UnUpLineWidthSpin} from \"../Spinners/UnUpLineWidthSpin.js\"\nimport { NodeSizeSpin} from \"../Spinners/NodeSizeSpin.js\"\nimport { UnUpNodeSizeSpin} from \"../Spinners/UnUpNodeSizeSpin.js\"\nimport { LineColorPicker } from \"../ColorPickers/LineColorPicker.js\"\nimport { UnUpLineColorPicker } from \"../ColorPickers/UnUpLineColorPicker.js\"\nimport { NodeColorPicker } from \"../ColorPickers/NodeColorPicker.js\"\nimport { UnUpNodeColorPicker } from \"../ColorPickers/UnUpNodeColorPicker.js\"\nimport { NodeShapeMenu } from \"../ShapeMenu/NodeShapeMenu.js\"\nimport { UnUpNodeShapeMenu } from \"../ShapeMenu/UnUpNodeShapeMenu.js\"\nimport { RemoveButtons } from \"../TableButtons/RemoveButtons.js\"\nimport { MoveButtons } from \"../TableButtons/MoveButtons.js\"\nimport { DataContext } from \"../../common/DataContext\";\nimport { saveAs } from 'file-saver'\nimport { GEM, MobileLineandNodeWrapper,MobileFileButtonsWrapper, EverythingbutTable ,MobileTeamTableWrapper, MobileTeamTableBtns,MobileViewWrapper ,AddUpdateEditor, FileButtonsWrapper, UpExDown, UnUpLineandNodeWrapper, LineandNodeWrapper, TeamTable, UnUploadedEditor, TeamTableBtns, AddUpdateBtns  } from \"./styles.js\";\nimport {BrowserView, MobileView, isBrowser, isMobile} from 'react-device-detect';\n\n\n\n\nvar inEditName, inUserName, inLineWidth, inNodeSize, inLineWidth, inNodeSize, inLineColor, inNodeColor, inNodeShape;\n\nconst GridLayout = WidthProvider(ReactGridLayout);\n\nexport const Grid = () => {\n  const { tableData, \n  setTableData,\n  fileID,\n  generateGemJsonId,\n  selectedRow,\n  setSelectedRow,\n  EditorRow,\n  setEditorRow,\n  } = useContext(DataContext);\n  const[lastOutJson,setLastOutJson]=useState({})\n  const [state, setState] = useState({\n    tableData:tableData,\n    TeamName:\"\",\n    EditorName:\"\",\n    UserName:\"\",\n    LineColor: '#A9A9A9',\n    LineWidth: 5,\n    NodeColor:\"#D3D3D3\",\n    NodeSize:5,\n    NodeShape:'/icons/circle.png',\n    UnUpLineColor: 'green',\n    UnUpNodeColor: 'orange',\n    UnUpLineWidth:5,\n    UnUpNodeSize:5,\n    UnUpNodeShape:'/icons/square.png',\n    FileIndex: fileID,\n    RowData:{},\n    ShowShapeMenu:false,\n    ShowUnUpShapeMenu:false,\n    ShowLineColorMenu:false,\n  \n    ShowUnUpLineColorMenu:false,\n    ShowNodeColorMenu:false,\n\n    ShowUnUpNodeColorMenu:false,\n    addEditor:true,\n    newFile:true,\n\n  });\n\n  useEffect((fileID) => {\n    if (fileID == null) {\n      generateGemJsonId();\n    }\n  }, [])\n\n    const GetUnUpload=() =>{\n      if (state.TeamName ===\"\" && tableData[0].NAME !=null){\n        alert(\"Please enter a valid team name before exporting\")\n        return\n      }\n      if (tableData[0].NAME ===null){\n        alert(\"No Data to export. You must either import an existing .mapscc file to edit, or populate the table with editor data in order to export.\")\n        return\n      }\n      let path = '/api/uploads/' + state.TeamName + \".mapcss\";\n      const Downrequest = async () => {\n        return fetch(path, {method: \"GET\",responseType: 'blob'})\n        .then(response=>response.blob())\n        .then(blob => saveAs(blob, state.TeamName + \".mapcss\"))\n      }\n      let outJson= [{\"TeamName\":state.TeamName,\"LineColor\":state.UnUpLineColor,\"lineWidth\":state.UnUpLineWidth,\"NodeSize\":state.UnUpNodeSize,\"NodeColor\":state.UnUpNodeColor,\"NodeShape\":state.UnUpNodeShape}]\n      outJson= JSON.stringify(outJson)\n      let url ='/api/compile?fileID='+fileID\n      const goEx = async () => {\n        const response =  await fetch(url, {method: \"POST\", body: outJson ,headers: {'Content-Type': 'application/json'}})\n        if(response.ok){\n          const obj= await response.text()\n          return fetch(path, {method: \"GET\",responseType: 'blob'})\n          .then(response=>response.blob())\n          .then(blob => saveAs(blob, state.TeamName + \".mapcss\"))\n        }}\n        goEx();\n    }\n\n    const changeFeature=(e,f) =>{\n    let outJson = state.RowData\n    switch(f){\n      case \"LineColor\":\n        setState({...state,LineColor:e});\n        break;\n\n      case \"NodeColor\":\n        setState({...state,NodeColor:e});\n        break;  \n\n      case \"UnUpLineColor\":\n        setState({...state,UnUpLineColor:e});\n        break;  \n\n      case \"UnUpNodeColor\":\n        setState({...state,UnUpNodeColor:e});\n        break;  \n\n      case \"NodeShape\":\n        setState({...state,NodeShape:e,ShowShapeMenu:false})\n        break;  \n\n      case \"UnUpNodeShape\":\n        setState({...state,UnUpNodeShape:e,ShowUnUpShapeMenu:false})\n        \n        break; \n\n      case \"+LineWidth\":\n        if (state.LineWidth !== 10){\n          setState({ ...state,LineWidth:state.LineWidth +1})}\n        break; \n\n      case \"-LineWidth\":\n        if (state.LineWidth !== 0){\n          setState({ ...state,LineWidth:state.LineWidth -1})}\n        break; \n\n      case \"+UnUpLineWidth\":\n        if (state.UnUpLineWidth !== 10){\n          setState({ ...state,UnUpLineWidth:state.UnUpLineWidth +1})}\n        break; \n\n      case \"-UnUpLineWidth\":\n        if (state.UnUpLineWidth !== 0){\n          setState({ ...state,UnUpLineWidth:state.UnUpLineWidth -1})}\n        break; \n\n      case \"+NodeSize\":\n        if (state.NodeSize !== 10){\n          setState({ ...state,NodeSize:state.NodeSize +1})}\n        break;\n\n      case \"-NodeSize\":\n        if (state.NodeSize !== 0){\n          setState({ ...state,NodeSize:state.NodeSize -1})}\n      break;\n\n      case \"+UnUpNodeSize\":\n         if (state.UnUpNodeSize !== 10){\n          setState({ ...state,UnUpNodeSize:state.UnUpNodeSize +1})}\n      break; \n\n      case \"-UnUpNodeSize\":\n         if (state.UnUpNodeSize !== 0){\n          setState({ ...state,UnUpNodeSize:state.UnUpNodeSize -1})}\n      break; \n\n      case \"TeamName\":\n         if (state.UnUpNodeSize !== 0){\n          setState({ ...state,TeamName:e})}\n      break; \n\n      case \"EditorName\":\n        setState({ ...state,EditorName:e})\n      break; \n\n      case \"UserName\":\n        setState({ ...state,UserName:e})\n      break; \n\n      case \"ShowShapeMenu\":\n        setState({ ...state,ShowShapeMenu:e})\n      break; \n\n      case \"ShowUnUpShapeMenu\":\n        setState({ ...state,ShowUnUpShapeMenu:e})\n      break; \n\n\n      case \"ShowLineColorMenu\":\n        setState({ ...state,ShowLineColorMenu:e})\n      break; \n\n      case \"ShowUnUpLineColorMenu\":\n        setState({ ...state,ShowUnUpLineColorMenu:e})\n      break; \n\n      case \"ShowNodeColorMenu\":\n        setState({ ...state,ShowNodeColorMenu:e})\n      break; \n\n      case \"ShowUnUpNodeColorMenu\":\n        setState({ ...state,ShowUnUpNodeColorMenu:e})\n      break; \n\n      case \"GetRowData\":\n        setState({ ...state,RowData:e})\n      break; \n\n      case \"Download\":\n      break; \n\n      case \"UnUpData\":\n        setState({ ...state,\n        newFile:false,\n        TeamName:e[0][\"TEAMNAME\"],\n        UnUpNodeColor:e[0][\"UNUPNODECOLOR\"], \n        UnUpNodeSize:e[0][\"UNUPNODESIZE\"],\n        UnUpNodeShape:\"/icons/\"+e[0][\"UNUPNODESHAPE\"]+\".png\",  \n        UnUpLineColor:e[0][\"UNUPLINECOLOR\"],\n        UnUpLineWidth:e[0][\"UNUPLINEWIDTH\"],\n      })\n  \n      break; \n\n\n      case \"RemoveEditor\":\n          outJson=JSON.stringify(outJson)\n          const request = async () => {\n          const response =  await fetch('/api/table?sub=remove&fileID='+fileID, {method: \"POST\", body: outJson ,headers: {'Content-Type': 'application/json'}})\n          if(response.ok){\n            let object = await response.json()\n            object=JSON.stringify(object)\n            object=JSON.parse(object)\n            setTableData(object)\n          }}\n          request();\n      break; \n\n      case \"RemoveAll\":\n        const removeRequest = async () => {\n        const response =  await fetch('/api/removeAll?fileID='+fileID, {method: \"GET\"})\n        if(response.ok){\n          let object = await response.json()\n          object=JSON.stringify(object)\n          object=JSON.parse(object)\n          setTableData(object)\n        }}\n        removeRequest();\n        setState({...state,\n          newFile:true,\n          TeamName:\"\"\n        })\n      \n      break;\n\n      case \"MoveUp\":\n        console.log(outJson)\n\n        if (outJson === lastOutJson){\n          outJson.rowId=outJson.rowId-1\n        }\n        const moveUpRequest = async () => {\n        const response =  await fetch('/api/table?sub=moveUp&fileID='+fileID,{method: \"POST\", body: JSON.stringify(outJson) ,headers: {'Content-Type': 'application/json'}})\n        if(response.ok){\n          let object = await response.json()\n          object=JSON.stringify(object)\n          object=JSON.parse(object)\n          setTableData(object)\n        }}\n        moveUpRequest();\n        if (selectedRow !== 0){\n          setSelectedRow(selectedRow - 1);\n          setEditorRow(selectedRow-1)\n          }\n        setLastOutJson(outJson)\n      break;\n\n      case \"MoveDown\":\n        if (outJson === lastOutJson){\n          outJson.rowId=outJson.rowId+1\n        }\n        const moveDownRequest = async () => {\n        const response =  await fetch('/api/table?sub=moveDown&fileID='+fileID,{method: \"POST\", body: JSON.stringify(outJson) ,headers: {'Content-Type': 'application/json'}})\n        if(response.ok){\n          let object = await response.json()\n          object=JSON.stringify(object)\n          object=JSON.parse(object)\n          setSelectedRow(selectedRow + 1)\n          setEditorRow(selectedRow +1)\n          setTableData(object)\n        }}\n        moveDownRequest();\n        setSelectedRow(selectedRow +1);\n        setEditorRow(selectedRow+1)\n        setLastOutJson(outJson)\n\n      break;\n\n      case \"Clear\":\n        console.log(\"clear\")\n        setState({...state,\n        EditorName: \"\",\n        UserName: \"\",\n        LineColor: '#A9A9A9',\n        LineWidth: 5,\n        NodeColor:\"#D3D3D3\",\n        NodeSize:5,\n        NodeShape:'/icons/circle.png'\n      })\n      break;\n      default:\n    }\n\n  }\n\n  function isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\n\n    const ChangeAddButton=()=>{\n      let outJson = state.RowData;\n      var checkJson;\n      if(Object.entries(outJson).length !== 0){\n        checkJson = outJson\n      }\n        if ( !checkJson){\n            alert(\"Invalid Selection\");\n        }\n        else\n        {\n      setState({ ...state,addEditor:false})\n     //\n    }\n  }\n\n  useEffect(() => {\n    if(state.addEditor !== true){\n      EditEditor();\n      // console.log(state)\n    }\n    // else if(!state.EditorName){\n      // EditEditor();\n    // }\n    \n\n  }, [state.addEditor]);\n\n    const EditEditor = () => {\n      let outJson = state.RowData\n      console.log(state.RowData)\n      let checkJson= outJson\n      inEditName = checkJson['editor']['NAME']\n\n      inUserName = checkJson['editor']['UID']\n      console.log(inUserName)\n      inLineWidth = checkJson['editor']['LINEWIDTH']\n      inNodeSize = checkJson['editor']['NODESIZE']\n      inLineColor=checkJson['editor']['LINECOLOR']\n      inNodeColor=checkJson['editor']['NODECOLOR']\n      inNodeShape=checkJson['editor']['NODESHAPE']\n      setState({...state,\n        EditorName: inEditName,\n        UserName: inUserName,\n        LineWidth: parseInt(inLineWidth),\n        NodeSize: parseInt(inNodeSize),\n        LineColor: inLineColor,\n        NodeShape:inNodeShape,\n        NodeColor:inNodeColor,\n      })\n\n    }\n    \n    const updateEditor = (e) => {\n      let sub = e\n      if (state.EditorName === \"\" && e === \"add\"){\n        alert(\"Please enter a valid Name for the Editor\")\n        return;\n      }\n      if (state.UserName === \"\" && e === \"add\"){\n          alert(\"Please enter a valid OSM Username\")\n          return;\n\n      }\n      else if(state.EditorName === \"Mappy McMappington III\" && e ===\"update\"){\n        alert(\"You must first select an Editor from the table to update. \")\n        return;\n      }\n    \n    let outJson = state.RowData\n    var checkJson;\n    if(Object.entries(outJson).length !== 0){\n     checkJson = JSON.parse(outJson)\n    }\n    var index;\n    if (checkJson){\n      index = checkJson[\"rowId\"]\n    }\n    let entry = {'NAME':state.EditorName,\"UID\":state.UserName,'NODESHAPE':state.NodeShape,'NODECOLOR':state.NodeColor,\"NODESIZE\":state.NodeSize,'LINEWIDTH':state.LineWidth,\"LINECOLOR\":state.LineColor}\n    entry=JSON.stringify(entry)\n    let url ='/api/update?sub='+sub+'&index='+index+'&infile='+fileID+\"&newFile=\"+state.newFile\n    const update = async () => {\n      const response =  await fetch(url, {method: \"POST\", body: entry ,headers: {'Content-Type': 'application/json'}})\n      if(response.ok){\n        const obj= await response.json()\n        setTableData(obj)\n      }}\n    update();\n    setState({...state,\n      EditorName:\"\",\n      UserName: \"\",\n      LineColor: '#A9A9A9',\n      LineWidth: 5,\n      NodeColor:\"#D3D3D3\",\n      NodeSize:5,\n      NodeShape:'/icons/circle.png',\n      addEditor:true\n      })\n    } \n\n  return (\n    <div className=\"Gem-div\" >\n      {/* <BrowserView> */}\n        <GEM>\n            <TeamTable>\n                { tableData ? <EditorTable useData={tableData} action={changeFeature}/> : null}\n            </TeamTable>\n            <div className=\"IMMenuLabel\" >\n              <div className='importLabelDiv'><h4 className=\"import-label\" >Import/Export:</h4></div>\n              <Divider/>\n              <h4 className=\"team-name-label\">Team Name:</h4> \n              <TeamNameField action={changeFeature} value={state.TeamName}/>\n              <Divider/>\n              <h4 className=\"file-functions\">File Import/Export:</h4>\n              <FileButtons fileID={state.fileID} action={changeFeature}action2={ GetUnUpload } />\n              <Divider/>\n              <h4 className=\"file-functions\">Delete Editors:</h4>\n                <RemoveButtons action={changeFeature}/>\n                <Divider/>\n              <h4 className=\"file-functions\">Move Editors:</h4>\n                <MoveButtons action={changeFeature}/>\n                <Divider/>\n                <h4 className=\"file-functions\">Update Editors:</h4>\n                <EditorButtons action={changeFeature} action2={updateEditor} action3={ChangeAddButton} bool={state.addEditor}/>\n\n            </div>\n        </GEM>\n        <EverythingbutTable>\n          <div className=\"MenuLabel\">\n              <UnUpNodeShapeMenu action={changeFeature}color={state.UnUpNodeColor}src={state.UnUpNodeShape} ShowMenu={state.ShowUnUpShapeMenu}/>\n              <Divider/>\n              <UnUpNodeSizeSpin num={state.UnUpNodeSize}action={changeFeature}action2={changeFeature}color={state.UnUpNodeColor}showMenu={state.ShowUnUpNodeColorMenu}/>\n              <Divider/>\n              <UnUpLineWidthSpin num={state.UnUpLineWidth}action={changeFeature}action2={changeFeature}color={state.UnUpLineColor}showMenu={state.ShowUnUpLineColorMenu}/>\n          </div>\n          <div className=\"MenuLabel\">\n            <NodeShapeMenu action={changeFeature}color={state.NodeColor}src={state.NodeShape} ShowMenu={state.ShowShapeMenu}editorName={state.EditorName}editorUsername={state.UserName}/>\n            <Divider/>\n            <NodeSizeSpin action={changeFeature}num={state.NodeSize}color={state.NodeColor}showMenu={state.ShowNodeColorMenu}/>\n            <Divider/>\n            <LineWidthSpin action={changeFeature}num={state.LineWidth}color={state.LineColor}showMenu={state.ShowLineColorMenu}/>\n          </div>\n        </EverythingbutTable>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}