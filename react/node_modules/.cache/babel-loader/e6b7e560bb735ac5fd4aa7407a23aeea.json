{"ast":null,"code":"var _jsxFileName = \"/Users/cefgoose/Desktop/WEBGEM/WebGem1/react/src/components/ColorPickers/NodeColorPicker.js\";\nimport React from 'react';\nimport { SketchPicker } from 'react-color';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Button = styled.button`\n  box-sizing: inherit;\n  font-family: sans-serif;\n  font-size: 100%;\n  line-height: 1.15;\n  min-width: 5vw;\n  height: 4vh;\n  overflow: visible;\n  text-transform: none;\n  border-radius: 6px;\n  margin-top: 1em;\n  margin-bottom: 1em;\n  background-color: #f4753c;\n  color: white;\n  border: none;\n  cursor: ${props => props.disabled ? \"not-allowed\" : \"pointer\"};\n  &:hover {\n    background-color: ${props => props.disabled ? \"gray\" : \"#c85823\"};\n    color: black;\n    background-color:  #ffff;\n    border: 2px solid #f4753c;\n  }\n`;\n_c = Button;\nexport const NodeColorWrapper = styled.div`\n  display: flex;\n  padding: 3%;\n  flex-direction: column;\n`;\n_c2 = NodeColorWrapper;\nexport const NodeColorPicker = props => {\n  const changeColor = color => {\n    props.action(color.hex, \"NodeColor\");\n  };\n\n  const toggleShowPicker = () => {\n    if (props.showMenu) {\n      props.action(false, \"ShowNodeColorMenu\");\n    } else {\n      props.action(true, \"ShowNodeColorMenu\");\n    }\n  };\n\n  if (props.showMenu) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(NodeColorWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Node Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n          disableAlpha: true,\n          color: props.color,\n          onChange: changeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleShowPicker,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(NodeColorWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Node Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"NodeIcons\",\n          src: null,\n          style: {\n            backgroundColor: props.color\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleShowPicker,\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n};\n_c3 = NodeColorPicker;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"NodeColorWrapper\");\n$RefreshReg$(_c3, \"NodeColorPicker\");","map":{"version":3,"sources":["/Users/cefgoose/Desktop/WEBGEM/WebGem1/react/src/components/ColorPickers/NodeColorPicker.js"],"names":["React","SketchPicker","styled","Button","button","props","disabled","NodeColorWrapper","div","NodeColorPicker","changeColor","color","action","hex","toggleShowPicker","showMenu","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA8B,aAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,OAAO,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAaC,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,aAAjB,GAAiC,SAAW;AACpE;AACA,wBAAyBD,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,SAAW;AACzE;AACA;AACA;AACA;AACA,CAtBO;KAAMH,M;AAwBb,OAAO,MAAMI,gBAAgB,GAAGL,MAAM,CAACM,GAAI;AAC3C;AACA;AACA;AACA,CAJO;MAAMD,gB;AAMb,OAAO,MAAME,eAAe,GAAGJ,KAAD,IAAU;AAGxC,QAAMK,WAAW,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,KAAK,CAACO,MAAN,CAAaD,KAAK,CAACE,GAAnB,EAAuB,WAAvB;AACD,GAFD;;AAKA,QAAMC,gBAAgB,GAAG,MAAI;AAC3B,QAAIT,KAAK,CAACU,QAAV,EAAmB;AACnBV,MAAAA,KAAK,CAACO,MAAN,CAAa,KAAb,EAAmB,mBAAnB;AACD,KAFC,MAEG;AACHP,MAAAA,KAAK,CAACO,MAAN,CAAa,IAAb,EAAkB,mBAAlB;AACD;AACA,GAND;;AAOI,MAAIP,KAAK,CAACU,QAAV,EAAmB;AACnB,wBACE;AAAA,6BACA,QAAC,gBAAD;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE,QAAC,YAAD;AAAe,UAAA,YAAY,EAAE,IAA7B;AAAmC,UAAA,KAAK,EAAEV,KAAK,CAACM,KAAhD;AAAsD,UAAA,QAAQ,EAAED;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAQE,GATF,MASM;AACJ,wBACE;AAAA,6BACD,QAAC,gBAAD;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAE,IAAhC;AAAsC,UAAA,KAAK,EAAE;AAACE,YAAAA,eAAe,EAACX,KAAK,CAACM;AAAvB,WAA7C;AAA4E,UAAA,GAAG,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADC,qBADF;AASD;AACJ,CAnCM;MAAML,e","sourcesContent":["import React from 'react';\nimport { SketchPicker, } from 'react-color';\nimport styled from \"styled-components\";\n\nexport const Button = styled.button`\n  box-sizing: inherit;\n  font-family: sans-serif;\n  font-size: 100%;\n  line-height: 1.15;\n  min-width: 5vw;\n  height: 4vh;\n  overflow: visible;\n  text-transform: none;\n  border-radius: 6px;\n  margin-top: 1em;\n  margin-bottom: 1em;\n  background-color: #f4753c;\n  color: white;\n  border: none;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  &:hover {\n    background-color: ${(props) => (props.disabled ? \"gray\" : \"#c85823\")};\n    color: black;\n    background-color:  #ffff;\n    border: 2px solid #f4753c;\n  }\n`;\n\nexport const NodeColorWrapper = styled.div`\n  display: flex;\n  padding: 3%;\n  flex-direction: column;\n`;\n\nexport const NodeColorPicker =(props)=> {\n\n\nconst changeColor = (color) => {\n  props.action(color.hex,\"NodeColor\")\n}\n\n\nconst toggleShowPicker = ()=>{\n  if (props.showMenu){\n  props.action(false,\"ShowNodeColorMenu\");\n}else{\n  props.action(true,\"ShowNodeColorMenu\");\n}\n}\n    if (props.showMenu){\n    return (\n      <>\n      <NodeColorWrapper>\n      <label> Node Color:</label>\n        <SketchPicker  disableAlpha={true} color={props.color}onChange={changeColor}/>\n        <Button onClick={toggleShowPicker}>Close</Button>\n        </NodeColorWrapper>\n      </>\n    )}else{\n      return (\n        <>\n       <NodeColorWrapper>\n        <label> Node Color:</label>\n        <img className=\"NodeIcons\" src={null} style={{backgroundColor:props.color}} alt=\"\"/>\n        <Button onClick={toggleShowPicker}>Open</Button>\n        </NodeColorWrapper>\n         </>\n      )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}